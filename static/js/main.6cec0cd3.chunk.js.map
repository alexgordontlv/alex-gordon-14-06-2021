{"version":3,"sources":["components/card/weathertypes.js","components/card/Card.js","utilities/functions.js","components/weathercard/WeatherCard.js","utilities/fetchfunction.js","redux/weather.types.js","redux/weather.actions.js","components/custominput/CustomInput.js","pages/mainpage/Mainpage.js","pages/favorites/Favorites.js","components/errormodal/Errormodal.js","components/navigation/Navigation.js","App.js","redux/weather.reducer.js","redux/store.js","index.js"],"names":["weatherTypes","cloudy","sunny","stormy","default","Card","weatherCondition","children","weatherIcon","className","style","background","getImage","imgNumber","WeatherCard","props","cityWeather","width","iconWidth","forecast","currentCity","favoritecard","history","useHistory","weather","img","WeatherIcon","headline","WeatherText","value","Temperature","Metric","Value","unit","Unit","Day","Icon","Date","getDay","Maximum","getWeatherProps","onClick","push","pathname","state","cityName","cityKey","loading","alt","src","heigth","API","process","fetchUrls","queryKey","a","urls","autoComplete","weatherForecast","axios","get","method","mode","headers","res","data","error","WEATHER_TYPES","toggleModal","message","type","payload","CustomInput","setCurrentCity","useState","input","setInput","suggestions","setSuggestions","dispatch","useDispatch","useEffect","timeOut","setTimeout","length","clearTimeout","onChange","e","target","placeholder","slice","map","city","idx","LocalizedName","Key","handleSuggestionClick","Mainpage","isFavorite","setFevorite","setCityWeather","fiveDayForecast","setFiveDayForecast","favorites","useSelector","fetchAndSet","useCallback","Promise","all","res1","res2","DailyForecasts","cityProp","location","replace","some","IconButton","favorite","color","Favorites","setFavorites","stateFavorites","newFavorites","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","border","boxShadow","shadows","padding","spacing","TransitionsModal","classes","open","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Navigation","selected","setSelected","currentTheme","to","ToggleButton","fontSize","App","exact","path","INITIAL_STATE","weatherReducer","action","flag","filter","Store","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6cec0cd3.chunk.js","sourcesContent":["const weatherTypes = {\n\tcloudy: 'linear-gradient(90deg, rgba(241,240,252,0.3) 0%, rgba(215,233,245,0.5) 0%, rgba(176,214,255,0.7) 100%)',\n\tsunny: 'linear-gradient(90deg, rgba(241,240,252,0.3) 0%, rgba(218,237,255,0.5) 0%, rgba(0,123,255,0.7) 100%)',\n\tstormy: 'linear-gradient(90deg, rgba(230,220,220,0.5) 0%, rgba(230,220,220,0.5) 0%, rgba(109,109,109,1) 100%)',\n\tdefault: 'linear-gradient(90deg, rgba(241,240,252,1) 0%, rgba(43,95,126,0.29315476190476186) 0%, rgba(245,245,245,1) 100%)',\n};\n\nexport default weatherTypes;\n","import React from 'react';\nimport './card.styles.css';\nimport weatherTypes from './weathertypes';\nconst Card = ({ children, weatherIcon }) => {\n\tlet weatherCondition;\n\tif (!weatherIcon) weatherCondition = 'default';\n\telse if (weatherIcon < 4) weatherCondition = 'sunny';\n\telse if (weatherIcon >= 4 && weatherIcon < 11) weatherCondition = 'cloudy';\n\telse weatherCondition = 'stormy';\n\n\treturn (\n\t\t<div className='card' style={{ background: weatherTypes[weatherCondition] }}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","const getImage = (imgNumber) => {\n\treturn `https://developer.accuweather.com/sites/default/files/${imgNumber < 10 ? `0${imgNumber}` : imgNumber}-s.png`;\n};\n\nexport const getWeatherProps = (cityWeather, forecast) => {\n\tconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n\treturn cityWeather\n\t\t? {\n\t\t\t\timg: getImage(cityWeather.WeatherIcon),\n\t\t\t\theadline: cityWeather.WeatherText,\n\t\t\t\tvalue: cityWeather.Temperature.Metric.Value,\n\t\t\t\tunit: cityWeather.Temperature.Metric.Unit,\n\t\t  }\n\t\t: {\n\t\t\t\timg: getImage(forecast.Day.Icon),\n\t\t\t\theadline: weekdays[new Date(forecast.Date).getDay()],\n\t\t\t\tvalue: forecast.Temperature.Maximum.Value,\n\t\t\t\tunit: forecast.Temperature.Maximum.Unit,\n\t\t  };\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getWeatherProps } from '../../utilities/functions';\nimport './weathercartd.styles.css';\n\nconst WeatherCard = (props) => {\n\tconst { cityWeather, width, iconWidth, forecast, currentCity, favoritecard } = props;\n\tconst history = useHistory();\n\tconst weather = getWeatherProps(cityWeather, forecast);\n\treturn (\n\t\t<div\n\t\t\tonClick={() => {\n\t\t\t\tfavoritecard &&\n\t\t\t\t\thistory.push({\n\t\t\t\t\t\tpathname: '/',\n\t\t\t\t\t\tstate: { cityName: currentCity.cityName, cityKey: currentCity.cityKey },\n\t\t\t\t\t});\n\t\t\t}}\n\t\t\tclassName={`weather_card_body ${favoritecard}`}\n\t\t\tstyle={{ width: width + 'px' }}>\n\t\t\t{<h2>{currentCity?.cityName}</h2>}\n\t\t\t<p>{weather.headline}</p>\n\t\t\t<div className='icon'>\n\t\t\t\t<img loading='lazy' alt='weather' src={weather.img} width={iconWidth} heigth={iconWidth} />\n\t\t\t</div>{' '}\n\t\t\t<h3 className='temprature'>{weather.value + weather.unit}</h3>\n\t\t</div>\n\t);\n};\n\nexport default WeatherCard;\n","import axios from 'axios';\n\nconst API = process.env.REACT_APP_WEATHER_API;\nconst fetchUrls = async (queryKey, cityKey) => {\n\tlet error;\n\tlet data;\n\tconst urls = {\n\t\tautoComplete: `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API}&q=${cityKey}`,\n\t\tweatherCondition: `https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API}`,\n\t\tweatherForecast: `https://dataservice.accuweather.com//forecasts/v1/daily/5day/${cityKey}?metric=true&apikey=${API}`,\n\t};\n\ttry {\n\t\tconst res = await axios.get(urls[queryKey], {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'no-cors',\n\t\t\theaders: {\n\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t});\n\t\tdata = res.data;\n\t} catch (err) {\n\t\terror = err;\n\t}\n\n\treturn { data, error };\n};\nexport default fetchUrls;\n","export const WEATHER_TYPES = {\n\tSET_THEME: 'SET_THEME',\n\tTOGGLE_FAVORITE: 'TOGGLE_FAVORITE',\n\tTOGGLE_MODAL: 'TOGGLE_MODAL',\n\tHIDE_MODAL: 'HIDE_MODAL',\n};\n","import { WEATHER_TYPES } from './weather.types';\n\nexport const setTheme = (theme) => {\n\treturn {\n\t\ttype: WEATHER_TYPES.SET_THEME,\n\t\tpayload: theme,\n\t};\n};\n\nexport const toggleFavorite = (favorite) => {\n\treturn {\n\t\ttype: WEATHER_TYPES.TOGGLE_FAVORITE,\n\t\tpayload: favorite,\n\t};\n};\n\nexport const toggleModal = (message) => {\n\treturn {\n\t\ttype: WEATHER_TYPES.TOGGLE_MODAL,\n\t\tpayload: message,\n\t};\n};\n\nexport const hideModal = () => {\n\treturn {\n\t\ttype: WEATHER_TYPES.HIDE_MODAL,\n\t};\n};\n","import React, { useState, useEffect } from 'react';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\nimport fetchUrls from '../../utilities/fetchfunction';\nimport { toggleModal } from '../../redux/weather.actions';\nimport { useDispatch } from 'react-redux';\n\nimport './custominput.styles.css';\nconst CustomInput = ({ setCurrentCity }) => {\n\tconst [input, setInput] = useState('');\n\tconst [suggestions, setSuggestions] = useState([]);\n\tconst dispatch = useDispatch();\n\tconst handleSuggestionClick = (city) => {\n\t\tsetCurrentCity({ cityName: city.LocalizedName, cityKey: city.Key });\n\t\tsetInput('');\n\t\tsetSuggestions([]);\n\t};\n\tuseEffect(() => {\n\t\tconst timeOut = setTimeout(async () => {\n\t\t\tif (input.length > 0) {\n\t\t\t\tconst { data, error } = await fetchUrls('autoComplete', input);\n\t\t\t\tif (error) dispatch(toggleModal('Error fetching  suggestions'));\n\t\t\t\telse setSuggestions(data);\n\t\t\t}\n\t\t}, 1000);\n\t\treturn () => clearTimeout(timeOut);\n\t}, [input, dispatch]);\n\n\treturn (\n\t\t<Combobox>\n\t\t\t<ComboboxInput\n\t\t\t\tvalue={input}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetInput(e.target.value);\n\t\t\t\t}}\n\t\t\t\tplaceholder='Search your city weather!'\n\t\t\t/>\n\t\t\t<ComboboxPopover>\n\t\t\t\t<ComboboxList className='option'>\n\t\t\t\t\t{suggestions &&\n\t\t\t\t\t\tsuggestions\n\t\t\t\t\t\t\t.slice(0, 5)\n\t\t\t\t\t\t\t.map((city, idx) => (\n\t\t\t\t\t\t\t\t<ComboboxOption key={idx} value={city.LocalizedName} className='search_option' onClick={() => handleSuggestionClick(city)} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t</ComboboxList>\n\t\t\t</ComboboxPopover>\n\t\t</Combobox>\n\t);\n};\n\nexport default CustomInput;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Card from '../../components/card/Card';\nimport WeatherCard from '../../components/weathercard/WeatherCard';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CustomInput from '../../components/custominput/CustomInput';\nimport { IconButton } from '@material-ui/core';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { useDispatch, useSelector } from 'react-redux';\nimport fetchUrls from '../../utilities/fetchfunction';\nimport { toggleFavorite, toggleModal } from '../../redux/weather.actions';\nimport { useHistory } from 'react-router-dom';\nimport './mainpage.styles.css';\n\nconst Mainpage = () => {\n\tconst [currentCity, setCurrentCity] = useState({\n\t\tcityName: 'Tel Aviv',\n\t\tcityKey: '215854',\n\t});\n\tconst [isFavorite, setFevorite] = useState(false);\n\tconst [cityWeather, setCityWeather] = useState('');\n\tconst [fiveDayForecast, setFiveDayForecast] = useState([]);\n\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst favorites = useSelector((state) => state.favorites);\n\n\tconst fetchAndSet = useCallback(async () => {\n\t\tconst [res1, res2] = await Promise.all([fetchUrls('weatherForecast', currentCity.cityKey), fetchUrls('weatherCondition', currentCity.cityKey)]);\n\t\tif (!res1.error && !res2.error) {\n\t\t\tsetFiveDayForecast(res1.data.DailyForecasts);\n\t\t\tsetCityWeather(res2.data[0]);\n\t\t} else {\n\t\t\tdispatch(toggleModal('Error fetching data...'));\n\t\t}\n\t}, [currentCity, dispatch]);\n\n\tuseEffect(() => {\n\t\tconst cityProp = history.location.state;\n\t\tcityProp && setCurrentCity(cityProp);\n\t\tfetchAndSet();\n\t\thistory.replace();\n\t}, [currentCity, history, fetchAndSet]);\n\n\tuseEffect(() => {\n\t\tsetFevorite(favorites.some((city) => city.cityKey === currentCity.cityKey));\n\t}, [favorites, currentCity]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='search'>\n\t\t\t\t<CustomInput {...{ setCurrentCity }} />\n\t\t\t</div>\n\t\t\t<Card weatherIcon={cityWeather && cityWeather.WeatherIcon}>\n\t\t\t\t{cityWeather && (\n\t\t\t\t\t<div className='main_weather'>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdispatch(toggleFavorite({ ...cityWeather, ...currentCity }));\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{isFavorite ? <FavoriteIcon style={{ color: 'red' }} /> : <FavoriteBorderIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<WeatherCard currentCity={currentCity} cityWeather={cityWeather} width='700' iconWidth='200' />\n\t\t\t\t\t\t{fiveDayForecast &&\n\t\t\t\t\t\t\tfiveDayForecast.map((forecast, idx) => <WeatherCard key={idx} forecast={forecast} width='120' iconWidth='100' />)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Mainpage;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport Card from '../../components/card/Card';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WeatherCard from '../../components/weathercard/WeatherCard';\nimport fetchUrls from '../../utilities/fetchfunction';\nimport { toggleModal } from '../../redux/weather.actions';\n\nconst Favorites = () => {\n\tconst [favorites, setFavorites] = useState([]);\n\tconst dispatch = useDispatch();\n\tconst stateFavorites = useSelector((state) => state.favorites);\n\n\tconst fetchAndSet = useCallback(async () => {\n\t\tconst newFavorites = await Promise.all(\n\t\t\tstateFavorites.map(async (city) => {\n\t\t\t\tconst { data, error } = await fetchUrls('weatherCondition', city.cityKey);\n\t\t\t\tif (error) dispatch(toggleModal('Error fetching favorites'));\n\t\t\t\telse return { ...data[0], cityName: city.cityName, cityKey: city.cityKey };\n\t\t\t})\n\t\t);\n\t\tsetFavorites(newFavorites);\n\t}, [stateFavorites, dispatch]);\n\n\tuseEffect(() => {\n\t\tfetchAndSet();\n\t}, [stateFavorites, fetchAndSet]);\n\n\treturn (\n\t\t<Card>\n\t\t\t{favorites &&\n\t\t\t\tfavorites.map((city, idx) => (\n\t\t\t\t\t<WeatherCard favoritecard='favoritecard' currentCity={city} key={idx} cityWeather={city} width='120' iconWidth='100' />\n\t\t\t\t))}\n\t\t</Card>\n\t);\n};\n\nexport default Favorites;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideModal } from '../../redux/weather.actions';\n\nconst useStyles = makeStyles((theme) => ({\n\tmodal: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tpaper: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000',\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t},\n}));\n\nexport default function TransitionsModal() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { open, message } = useSelector((state) => state.error);\n\tconst handleClose = () => {\n\t\tdispatch(hideModal());\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Modal\n\t\t\t\taria-labelledby='transition-modal-title'\n\t\t\t\taria-describedby='transition-modal-description'\n\t\t\t\tclassName={classes.modal}\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tcloseAfterTransition\n\t\t\t\tBackdropComponent={Backdrop}\n\t\t\t\tBackdropProps={{\n\t\t\t\t\ttimeout: 500,\n\t\t\t\t}}>\n\t\t\t\t<Fade in={open}>\n\t\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t\t<h2>{message}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</Fade>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from '../../redux/weather.actions';\nimport './navigation.styles.css';\nimport { Link } from 'react-router-dom';\nconst Navigation = () => {\n\tconst [selected, setSelected] = useState(false);\n\tconst currentTheme = useSelector((state) => state.theme);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div className={`navigation navigation_${currentTheme}`}>\n\t\t\t<Link to='/'>\n\t\t\t\t<h2 className={`nav_option nav_option_${currentTheme}`}>Home</h2>\n\t\t\t</Link>\n\t\t\t<Link to='/favorites'>\n\t\t\t\t<h2 className={`nav_option nav_option_${currentTheme}`}>Favorites</h2>\n\t\t\t</Link>\n\t\t\t<ToggleButton\n\t\t\t\tvalue='check'\n\t\t\t\tselected={selected}\n\t\t\t\tstyle={{ color: selected && '#82ca9d', fontSize: 16 }}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetSelected((selected) => !selected);\n\t\t\t\t\tdispatch(setTheme(selected ? 'light' : 'dark'));\n\t\t\t\t}}>\n\t\t\t\t{currentTheme}\n\t\t\t</ToggleButton>{' '}\n\t\t</div>\n\t);\n};\n\nexport default Navigation;\n","import './App.css';\nimport Mainpage from './pages/mainpage/Mainpage';\nimport Favorites from './pages/favorites/Favorites';\nimport ErrorModal from './components/errormodal/Errormodal';\nimport Navigation from './components/navigation/Navigation';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nfunction App() {\n\tconst currentTheme = useSelector((state) => state.theme);\n\treturn (\n\t\t<Router>\n\t\t\t<ErrorModal />\n\t\t\t<div className={`app app_${currentTheme}`}>\n\t\t\t\t<Navigation />\n\t\t\t\t<div className='app_body'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t<Mainpage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path='/favorites'>\n\t\t\t\t\t\t\t<Favorites />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\nexport default App;\n","import { WEATHER_TYPES } from './weather.types';\nconst INITIAL_STATE = {\n\terror: {\n\t\topen: false,\n\t\tmessage: '',\n\t},\n\tfavorites: [],\n\ttheme: 'light',\n};\n\nconst weatherReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase WEATHER_TYPES.SET_THEME:\n\t\t\treturn { ...state, theme: action.payload };\n\t\tcase WEATHER_TYPES.TOGGLE_FAVORITE:\n\t\t\tlet flag = state.favorites.some((city) => city.cityKey === action.payload.cityKey);\n\t\t\tlet newFavorites;\n\t\t\tif (flag) {\n\t\t\t\tnewFavorites = state.favorites.filter((city) => city.cityName !== action.payload.cityName);\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tisFavorite: false,\n\t\t\t\t\tfavorites: newFavorites,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tnewFavorites = [...state.favorites, action.payload];\n\t\t\t\treturn { ...state, isFavorite: true, favorites: newFavorites };\n\t\t\t}\n\t\tcase WEATHER_TYPES.TOGGLE_MODAL:\n\t\t\treturn { ...state, error: { ...state.error, open: true, message: action.payload } };\n\t\tcase WEATHER_TYPES.HIDE_MODAL:\n\t\t\treturn INITIAL_STATE;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default weatherReducer;\n","import { createStore } from 'redux';\nimport weatherReducer from './weather.reducer';\n\nconst Store = createStore(weatherReducer);\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t\t,\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}